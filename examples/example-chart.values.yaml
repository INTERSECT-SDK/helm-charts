# This is an example file you can use as a template for a production environment.
#
# Things you may want to modify
# - Any part of the chart can be enabled/disabled as needed.
# - Authentication credentials. Any variable leading with a * is defined under .anchors - otherwise it's safe to change.
# - System resources. This file has sane defaults but you may want to tweak these. Note that RabbitMQ and MinIO have minimum runtime requirements. 
#     More information: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/



######################
#### ANCHORS #########
######################
# anchors are just a useful feature so you don't repeat yourself in the config file

.anchors:
  # message plane
  messageBroker:
    username: &messageBroker-username "control"
    # note that the password secret name won't change per deployment, just define the password directly in the broker configuration once
    amqpNodePort: &messageBroker-amqpNodePort 30010
    mqttNodePort: &messageBroker-mqttNodePort 30011
    #stompNodePort: &messageBroker-stompNodePort 30012
    managerNodePort: &messageBroker-managerNodePort 30013
    metricsNodePort: &messageBroker-metricsNodePort 30014
    distNodePort: &messageBroker-distNodePort 30015
    epmdNodePort: &messageBroker-epmdNodePort 30016

  # data plane
  minio:
    username: &minio-username "data"
    password: &minio-password "data_password"
    nodePort: &minio-nodePort 30020
    consoleNodePort: &minio-consoleNodePort 30021    

###################################
##### UI/MICROSERVICE SUBCHARTS ###
###################################

################################
### MESSAGE BROKER SUBCHARTS ###
################################

# you can tweak authentication + hardware resources if you want, don't disable these

intersect-message-broker-1:
  auth:
    username: *messageBroker-username
    # you may find it easier to create your own Secret instead of using the Secret generated by the Bitnami chart
    # in this case, use .Values.auth.existingPasswordSecret or .Values.auth.existingErlangSecret
    password: ZTQ0YjljYTk0MTBj
    erlangCookie: MTliNGQxYzI2YTA4
  # this example will use a NodePort service
  service:
    type: NodePort
    nodePorts:
      amqp: *messageBroker-amqpNodePort
      dist: *messageBroker-distNodePort
      manager: *messageBroker-managerNodePort
      epmd: *messageBroker-epmdNodePort
      metrics: *messageBroker-metricsNodePort
    extraPorts:
      - name: mqtt
        port: 1883
        targetPort: 1883
        nodePort: *messageBroker-mqttNodePort
      #- name: stomp
      #  port: 61613
      #  targetPort: 61613
      #  nodePort: *messageBroker-stompNodePort    
  resources:
    requests:
      memory: "2Gi"
      # cpu: "8"
      # ephemeral-storage: "2Gi"
    limits:
      # NOTE: the default RabbitMQ chart REQUIRES you to set the "memory" value EVEN IF .Values.intersect-message-broker-1.memoryHighWatermark.type is "absolute"
      # this got fixed on a later version of the RabbitMQ chart than what we're using: https://github.com/bitnami/charts/commit/b92af12ad55e92c8b1377987b222090787d23b02
      memory: "4Gi"
      # cpu: "16"
      # ephemeral-storage: "4Gi"

############################
### DATA PLANE SUBCHARTS ###
############################

# you can tweak authentication + hardware resources if you want, don't disable these

intersect-storage-1:
  auth:
    rootUser: *minio-username
    rootPassword: *minio-password
  # this example will use a NodePort service
  service:
    type: NodePort
    nodePorts:    
      nodePort: *minio-nodePort
      consoleNodePort: *minio-consoleNodePort
  resources:
    requests:
      # memory: "64Mi"
      # cpu: "8"
      ephemeral-storage: "2Gi"
    limits:
      # memory: "128Mi"
      # cpu: "16"
      ephemeral-storage: "4Gi"
